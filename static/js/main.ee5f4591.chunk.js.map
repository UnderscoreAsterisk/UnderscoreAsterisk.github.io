{"version":3,"sources":["Components/Header.js","Components/Footer.js","Components/About.js","Components/Portfolio.js","App.js","registerServiceWorker.js","index.js"],"names":["Header","this","props","data","name","occupation","description","city","address","networks","social","map","network","key","href","url","className","id","title","Component","Footer","About","profilepic","image","bio","street","state","email","zip","phone","resumedownload","src","alt","Portfolio","useState","open","setOpen","desc","target","portfolioImagePath","projects","projectImage","onClick","category","modals","projectURL","isOpen","onRequestClose","Modal","setAppElement","App","foo","resumeData","$","ajax","dataType","cache","success","setState","bind","error","xhr","status","err","console","log","alert","getResumeData","main","portfolio","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","response","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.ee5f4591.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass Header extends Component {\r\n  render() {\r\n\r\n    if(this.props.data){\r\n      var name = this.props.data.name;\r\n      var occupation= this.props.data.occupation;\r\n      var description= this.props.data.description;\r\n      var city= this.props.data.address.city;\r\n      var networks= this.props.data.social.map(function(network){\r\n        return <li key={network.name}><a href={network.url}><i className={network.className}></i></a></li>\r\n      })\r\n    }\r\n\r\n    return (\r\n      <header id=\"home\">\r\n\r\n      <nav id=\"nav-wrap\">\r\n\r\n         <a className=\"mobile-btn\" href=\"#nav-wrap\" title=\"Show navigation\">Show navigation</a>\r\n\t      <a className=\"mobile-btn\" href=\"#home\" title=\"Hide navigation\">Hide navigation</a>\r\n\r\n         <ul id=\"nav\" className=\"nav\">\r\n            <li className=\"current\"><a className=\"smoothscroll\" href=\"#home\">Home</a></li>\r\n            <li><a className=\"smoothscroll\" href=\"#portfolio\">Portfolio</a></li>\r\n            <li><a className=\"smoothscroll\" href=\"#about\">About</a></li>\r\n         </ul>\r\n\r\n      </nav>\r\n\r\n      <div className=\"row banner\">\r\n         <div className=\"banner-text\">\r\n            <h1 className=\"responsive-headline\">Hello there!</h1>\r\n            <h2 className=\"responsive-headline\">My name is {name}</h2>\r\n            <h3>I'm a <span>{occupation}</span> based out of {city}. {description}.</h3>\r\n            <hr />\r\n            <ul className=\"social\">\r\n               {networks}\r\n            </ul>\r\n         </div>\r\n      </div>\r\n\r\n      <p className=\"scrolldown\">\r\n         <a className=\"smoothscroll\" href=\"#portfolio\"><i className=\"icon-down-circle\"></i></a>\r\n      </p>\r\n\r\n   </header>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;\r\n","import React, { Component } from 'react';\r\n\r\nclass Footer extends Component {\r\n  render() {\r\n\r\n    if(this.props.data){\r\n      var networks= this.props.data.social.map(function(network){\r\n        return <li key={network.name}><a href={network.url}><i className={network.className}></i></a></li>\r\n      })\r\n    }\r\n\r\n    return (\r\n      <footer>\r\n\r\n     <div className=\"row\">\r\n        <div className=\"twelve columns\">\r\n           <ul className=\"social-links\">\r\n              {networks}\r\n           </ul>\r\n\r\n           <ul>\r\n            <li>Made with ♥️ and ☕️ by Apoorv Goel</li>\r\n           </ul>\r\n\r\n           <ul className=\"copyright\">\r\n              <li>&copy; Original template by Tim Baker - Copyright 2017 Tim Baker</li>\r\n              <li>Design by <a title=\"Styleshout\" href=\"http://www.styleshout.com/\">Styleshout</a></li>\r\n           </ul>\r\n\r\n        </div>\r\n        <div id=\"go-top\"><a className=\"smoothscroll\" title=\"Back to Top\" href=\"#home\"><i className=\"icon-up-open\"></i></a></div>\r\n     </div>\r\n  </footer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Footer;\r\n","import React, { Component } from 'react';\r\n\r\nclass About extends Component {\r\n  render() {\r\n\r\n    if(this.props.data){\r\n      var name = this.props.data.name;\r\n      var profilepic= \"images/\"+this.props.data.image;\r\n      var bio = this.props.data.bio;\r\n      var street = this.props.data.address.street;\r\n      var city = this.props.data.address.city;\r\n      var state = this.props.data.address.state;\r\n      var zip = this.props.data.address.zip;\r\n      var phone= this.props.data.phone;\r\n      var email = this.props.data.email;\r\n      var resumeDownload = this.props.data.resumedownload;\r\n    }\r\n\r\n    return (\r\n      <section id=\"about\">\r\n      <div className=\"row\">\r\n         <div className=\"three columns\">\r\n            <img className=\"profile-pic\"  src={profilepic} alt=\"Tim Baker Profile Pic\" />\r\n         </div>\r\n         <div className=\"nine columns main-col\">\r\n            <h2>About Me</h2>\r\n\r\n            <p>{bio}</p>\r\n            <div className=\"row\">\r\n               <div className=\"columns contact-details\">\r\n                  <h2>Contact Details</h2>\r\n                  <p className=\"address\">\r\n\t\t\t\t\t\t   <span>{name}</span><br />\r\n\t\t\t\t\t\t   <span>{city}, {state}</span><br />\r\n                     <br/>\r\n                     <span>{email}</span>\r\n\t\t\t\t\t   </p>\r\n               </div>\r\n               <div className=\"columns download\">\r\n                  <p>\r\n    {/*<a href={resumeDownload} className=\"button\"><i className=\"fa fa-download\"></i>Download Resume</a>*/}\r\n                  </p>\r\n               </div>\r\n            </div>\r\n         </div>\r\n      </div>\r\n\r\n   </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default About;\r\n","import React, { Component, useState } from 'react';\r\nimport Modal from 'react-modal';\r\n\r\nModal.setAppElement(\"div\")\r\n\r\nexport default function Portfolio (props) {\r\n    \r\n  const [open, setOpen] = useState(null); \r\n  const portfolioImagePath = 'images/portfolio/';\r\n\r\n  var desc = {\r\n    'dynafu': (\r\n      <div className=\"description-box\">\r\n        <h1>DynamicFusion Implementation</h1>\r\n        <a target=\"_blank\" href=\"https://www.youtube.com/watch?v=68WBnkML_GA\">Video Demo on Youtube</a> <br/>\r\n        <a target=\"_blank\" href=\"https://github.com/opencv/opencv_contrib/blob/master/modules/rgbd/doc/dynafu_ICP.ipynb\">ICP expression derivation</a>\r\n        <p>DynamicFusion is the first dense SLAM system capable of reconstructing non-rigidly deforming scenes in real time. It accomplishes this by extending the KinectFusion algorithm with a 6D motion field that is used to warp the canonical geometry onto the live frame. DynamicFusion was published by Newcombe, et al. and won the best paper award at CVPR. </p>\r\n        <p>It tracks the evolution of a canonical geometry and has interesting applications in robotics and augmented reality (AR).</p>\r\n        \r\n        <p>The algorithm consists of the following steps in a nutshell for each incoming frame:\r\n        <ol>\r\n          <li>Estimation of the 6-dimensional motion field parameters using the ICP cost, which involves a data term as well as a regularisation term.</li>\r\n          <li>Surface fusion of the received depth map with the canonical geometry after applying the estimated warp field</li>\r\n          <li>New nodes are added in the warp field to cover newly discovered geometry and a regularisation graph, which is used to calculate the regularisation term in the ICP cost, is also updated.</li>\r\n        </ol>\r\n        </p>\r\n        <p>It was implemented for OpenCV as part of Google Summer of Code 2019</p>\r\n      </div>\r\n      ),\r\n    'ugv': (\r\n      <div className=\"description-box\">\r\n        <h1>Unmanned Ground Vehicle (UGV)</h1>\r\n        <p>This UGV can autonomously navigate an outdoor track delineated with white lines, and endpoints specified with GPS coordinates. \r\n          The track may also contain obstacles, the rover will find a way around those obstacles.</p>\r\n        <p>It was our entry to the Intelligent Ground Vehicle Competition (IGVC) 2019 held at Oakland University, MI, \r\n          where we were ranked 9th globally.</p>\r\n        <img src={portfolioImagePath+'lane_capture.PNG'}/>\r\n        <img src={portfolioImagePath+'gazebo.png'}/>\r\n      </div>\r\n    ),\r\n    'everywear': (\r\n      <div className=\"description-box\">\r\n        <h1>EveryWear</h1>\r\n        <a href=\"https://youtu.be/GxMuJM49ZKk\" target=\"_blank\">Demo video on youtube</a>\r\n        <p>Tangible User Interface (TUI) for a smart mirror, that could be controlled with gestures made about \r\n          a marker specific to each user.</p>\r\n        <img src={portfolioImagePath+\"point.png\"}/>\r\n      </div>\r\n    ),\r\n    'sck': (\r\n      <div className=\"description-box\">\r\n        <h1>Sparse Coding based Keypoints (SCK) detector</h1>\r\n        <img src={portfolioImagePath+'sck_pipeline.png'}/>\r\n        <p>Commonly used key point detectors such as Harris corner detector, Scale Invariant Feature Transform (SIFT), Speeded Up Robust Features (SURF), and others are only designed to detect a certain kind of hand crafted feature such as corners, edges, blobs or ridges. Since such detectors are almost mutually exclusive, they can be run in succession to detect \r\n          all kinds of features. However, this is very slow and hence not suitable for many applications requiring real-time performance.</p>\r\n        <p>The common denominator among all kinds of features is that they record some notion of complexity in the image. \r\n          The presented SCK detector tries to capture the generic complex parts of the images using a sparse coding.</p>\r\n        <p>The image is divided into blocks of a fixed size, and each block is reconstructed with a sparse representation. \r\n          A block is understood to be more complex if it requires a larger number of components to approximately reconstruct the signal. \r\n          Therefore, sparsity measures such as the number of zero elements directly influence the decision to consider a block a key point. \r\n          After constructing a sparse representation for each block, thresholding is performed to remove blocks with low complexity.\r\n          Since this notion of complexity is generic, it must be able to detect all types of features including corners, edges and ridges.</p>\r\n      </div>\r\n    ),\r\n    'stain': (\r\n      <div className=\"description-box\">\r\n        <h1>Stain Invariant Histology using Unsupervised Domain Adaptation</h1>\r\n        <img src={portfolioImagePath+'domains.png'}/>\r\n        <p>When a sample of cells is prepared for observation under a microscope, the same sample can appear differently depending on various uncontrollable factors such as\r\n          concentration of dyes, shape of incision among many others. It reduces the effectiveness of automated diagnostic tools \r\n          based on deep learning. This project is a novel framework for unsupervised domain adaptation meant to overcome this problem \r\n          without relying on labelled data. This is an important distinction as supervised data is expensive to obtain for such datasets.</p>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  if(props.data){\r\n    var projects = props.data.projects.map(function(projects){\r\n      var projectImage = portfolioImagePath+projects.image;\r\n      return <div key={projects.title} className=\"columns portfolio-item\">\r\n          <div className=\"item-wrap\">\r\n          <a title={projects.title} onClick={() => setOpen(projects.id)}>\r\n              <img alt={projects.title} src={projectImage} />\r\n              <div className=\"overlay\">\r\n                <div className=\"portfolio-item-meta\">\r\n                <h5>{projects.title}</h5>\r\n                    <p>{projects.category}</p>\r\n                </div>\r\n              </div>\r\n            <div className=\"link-icon\"><i className=\"icon-plus\"></i></div>\r\n          </a>\r\n        </div>\r\n      </div>\r\n    })\r\n    \r\n    var modals = props.data.projects.map(function(projects){\r\n      var projectImage = 'images/portfolio/'+projects.image;\r\n      var projectURL = projects.url?(<a href={projects.url} target=\"_blank\">More Details</a>):null;\r\n      return <Modal isOpen={open==projects.id} onRequestClose={() => setOpen(false)} className=\"popup-modal\">\r\n      <img className=\"scale-with-grid\" src={projectImage} alt=\"\" />\r\n      \r\n      {desc[projects.id]}\r\n  \r\n      <div className=\"link-box\">\r\n        {projectURL}\r\n        <a className=\"popup-modal-dismiss\" onClick={() => setOpen(false)}>Close</a>\r\n      </div>\r\n    </Modal>\r\n    })\r\n  } \r\n  \r\n  return (\r\n    <section id=\"portfolio\">\r\n\r\n    <div className=\"row\">\r\n        <div className=\"twelve columns collapsed\">\r\n          <h1>Check Out Some of My Work</h1>\r\n\r\n          <div id=\"portfolio-wrapper\" className=\"bgrid-quarters s-bgrid-thirds cf\">\r\n              {projects}\r\n          </div>\r\n        </div>\r\n        {modals}\r\n    </div>\r\n  </section>\r\n  )\r\n}\r\n","import React, { Component } from 'react';\r\nimport $ from 'jquery';\r\nimport './App.css';\r\nimport Header from './Components/Header';\r\nimport Footer from './Components/Footer';\r\nimport About from './Components/About';\r\nimport Portfolio from './Components/Portfolio';\r\n\r\nclass App extends Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      foo: 'bar',\r\n      resumeData: {}\r\n    };\r\n\r\n  }\r\n\r\n  getResumeData(){\r\n    $.ajax({\r\n      url:'/resumeData.json',\r\n      dataType:'json',\r\n      cache: false,\r\n      success: function(data){\r\n        this.setState({resumeData: data});\r\n      }.bind(this),\r\n      error: function(xhr, status, err){\r\n        console.log(err);\r\n        alert(err);\r\n      }\r\n    });\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.getResumeData();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <Header data={this.state.resumeData.main}/>\r\n        <Portfolio data={this.state.resumeData.portfolio}/>\r\n        <About data={this.state.resumeData.main}/>\r\n        <Footer data={this.state.resumeData.main}/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport registerServiceWorker from './registerServiceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\nregisterServiceWorker();\r\n"],"sourceRoot":""}